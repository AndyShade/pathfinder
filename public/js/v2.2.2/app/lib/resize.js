define([],()=>{"use strict";class ResizeManager{constructor(e={}){this._config=Object.assign({},ResizeManager.defaultConfig,e),this._observables=new WeakMap,this._observer=new ResizeObserver((e,t)=>{for(let t of e)this._observables.has(t.target)?this._observables.get(t.target).callback(t.target,t.contentRect):this._observer.unobserve(t.target)})}debounce(e,t=this._config.msDebounce,s=!1){let r;return(...o)=>{let a=s&&!r;clearTimeout(r),r=setTimeout(()=>{r=null,s||e(...o)},t),a&&e(...o)}}throttle(e,t=this._config.msThrottle){let s,r;return function(...o){r?(clearTimeout(s),s=setTimeout(()=>{Date.now()-r>=t&&(e(...o),r=Date.now())},t-(Date.now()-r))):(e(...o),r=Date.now())}}observe(e,t,s={},r=ResizeManager.observeOptions){if(!this._observables.has(e)){if(s.hasOwnProperty("debounce")){let{ms:e,immediate:r}=s;t=this.debounce(t,e,r)}if(s.hasOwnProperty("throttle")){let{ms:e}=s;t=this.throttle(t,e)}this._observables.set(e,{callback:t}),this._observer.observe(e,r)}}unobserve(e){this._observer.unobserve(e),this._observables.delete(e)}disconnect(){this._observer.disconnect(),this._observables=new WeakMap}}return ResizeManager.observeOptions={box:"border-box"},ResizeManager.defaultConfig={msDebounce:250,msThrottle:100},new ResizeManager});
//# sourceMappingURL=resize.js.map
