define(["localForage","app/promises/promise.queue","app/promises/promise.deferred"],(e,t,r)=>{"use strict";class LocalStore{constructor(o,s){this._config=Object.assign({},this.constructor.defaultConfig,o);let n=new r;this._processQueue=new t,this._processQueue.enqueue(()=>n),this._localforage=e.createInstance(Object.assign({},LocalStore.LocalForageConfig,s)),this._localforage.ready().then(()=>n.resolve()),this._manager=null,this.debug=((e,...t)=>{this._config.debug&&((t=t||[]).unshift(this.constructor.name,this._config.name),console.debug("debug: %s %o | "+e,...t))})}set scope(e){if(!LocalStore.isString(e))throw new TypeError('Scope must be instance of "String", Type of "'+typeof e+'" given');this._config.scope=e}get scope(){return this._config.scope}getItem(e,t){e=this.fixKey(e);let r=LocalStore.keyToArray(e),o=r.shift(),s=()=>this._localforage.getItem(e,t);return r.length&&(s=(()=>this._localforage.getItem(o).then(e=>LocalStore.isObject(e)?LocalStore.findObjProp(e,r):Promise.resolve(null)))),this._processQueue.enqueue(()=>s())}setItem(e,t,r){e=this.fixKey(e);let o=LocalStore.keyToArray(e),s=o.shift(),n=()=>Promise.resolve(t);return o.length&&(n=(()=>this._localforage.getItem(s).then(e=>(e=null===e?{}:e,LocalStore.updateObjProp(e,t,o),e)))),this._processQueue.enqueue(()=>n().then(e=>this._localforage.setItem(s,e,r)).then(()=>Promise.resolve(t)))}removeItem(e,t){e=this.fixKey(e);let r=LocalStore.keyToArray(e),o=r.shift(),s=()=>this._localforage.removeItem(o,t);return r.length&&(s=(()=>this._localforage.getItem(o).then(e=>LocalStore.isObject(e)?(LocalStore.deleteObjProp(e,r),e):Promise.reject(new RangeError("No data found for key: "+o))).then(e=>this._localforage.setItem(o,e,t)).catch(e=>this.debug("removeItem() error",e)))),this._processQueue.enqueue(()=>s())}clear(e){return this._processQueue.enqueue(()=>this._localforage.clear(e))}length(e){return this._processQueue.enqueue(()=>this._localforage.length(e))}key(e,t){return this._processQueue.enqueue(()=>this._localforage.key(e,t))}keys(e){return this._processQueue.enqueue(()=>this._localforage.keys(e))}dropInstance(){return this._processQueue.enqueue(()=>this._localforage.dropInstance().then(()=>this._manager.deleteStore(this._config.name)))}connect(e){if(!(e instanceof LocalStoreManager))throw new TypeError('Parameter must be instance of LocalStoreManager. Type of "'+typeof e+'" given');this._manager=e}fixKey(e){return LocalStore.isString(this.scope)&&this.scope.length&&(e=[this.scope,e].join(".")),(Number.isInteger(e)||LocalStore.isString(e)&&parseInt(e.charAt(0),10))&&(e=[this._config.name,e].join("_")),e}static findObjProp(e,t){let[r,...o]=t;return o.length?LocalStore.isObject(e[r])?LocalStore.findObjProp(e[r],o):null:e[r]}static updateObjProp(e,t,r){let[o,...s]=r;s.length?(LocalStore.isObject(e[o])||(e[o]={}),LocalStore.updateObjProp(e[o],t,s)):e[o]=t}static deleteObjProp(e,t){let[r,...o]=t;o.length?LocalStore.isObject(e[r])&&LocalStore.deleteObjProp(e[r],o):delete e[r]}static keyToArray(e){return e.split(".")}static buildDbName(e){return[LocalStore.dbNamePrefix,e].join(" ")}static isObject(e){return!!e&&e.constructor===Object}static isArray(e){return!!e&&e.constructor===Array}static isString(e){return"string"==typeof e}}LocalStore.defaultConfig={name:"default",debug:!1},LocalStore.dbNamePrefix="PathfinderDB",LocalStore.LocalForageConfig={driver:[e.INDEXEDDB,e.WEBSQL,e.LOCALSTORAGE],name:LocalStore.dbNamePrefix};class LocalStoreManager{constructor(){return this.constructor.instance||(this._store=new Map,this.constructor.instance=this),this.constructor.instance}getStore(e){return this.newStore(e)}newStore(e){if(!this._store.has(e)){let t=new LocalStore({name:e},{name:LocalStore.buildDbName(e)});t.connect(this),this._store.set(e,t)}return this._store.get(e)}deleteStore(e){return this._store.delete(e)}}return new LocalStoreManager});
//# sourceMappingURL=localStore.js.map
