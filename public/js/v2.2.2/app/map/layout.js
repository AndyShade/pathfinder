define(()=>{"use strict";return{Position:class Position{constructor(t){this._defaultConfig={container:null,center:null,elementClass:"pf-system",defaultSteps:8,defaultGapX:50,defaultGapY:50,gapX:50,gapY:50,minX:0,minY:0,spacingX:20,spacingY:10,loops:2,grid:!1,newElementWidth:100,newElementHeight:22,mirrorSearch:!1,debug:!1,debugOk:!1,debugElementClass:"pf-system-debug"},this._config=Object.assign({},this._defaultConfig,t),this._config.dimensionCache={},this._cacheKey=((t,i)=>["dim",t.left,t.top,t.width,t.height,i].join("_")),this._degToRad=(t=>t*Math.PI/180),this._getElementDimension=((t,i=0,e=0)=>{let n=0,s=0,o=0,h=0,a=this._config.newElementWidth,g=this._config.newElementHeight;if(Array.isArray(t)){let i=[t[0]?parseInt(t[0],10):0,t[1]?parseInt(t[1],10):0];this._config.grid&&(i=this._transformPointToGrid(i)),n=i[0],s=i[1],o=this._config.gapX,h=this._config.gapY}else t instanceof Element?(n=(t.style.left?parseInt(t.style.left,10):0)-i,s=(t.style.top?parseInt(t.style.top,10):0)-e,o=parseInt((t.offsetWidth/2).toString(),10)+i+this._config.gapX,h=parseInt((t.offsetHeight/2).toString(),10)+e+this._config.gapY,a=t.offsetWidth+2*i,g=t.offsetHeight+2*e):t instanceof Object&&(n=t.left-i,s=t.top-e,o=parseInt((t.width/2).toString(),10)+i+this._config.gapX,h=parseInt((t.height/2).toString(),10)+e+this._config.gapY,a=t.width+2*i,g=t.height+2*e);return{left:n,top:s,a:o,b:h,width:a,height:g}}),this._getEllipseCoordinates=((t,i)=>{let e=null;return t&&(i=this._degToRad(i),e={x:Math.round(t.a*t.b/Math.sqrt(Math.pow(t.b,2)+Math.pow(t.a,2)*Math.pow(Math.tan(i),2))),y:Math.round(t.a*t.b/Math.sqrt(Math.pow(t.a,2)+Math.pow(t.b,2)/Math.pow(Math.tan(i),2)))},i>Math.PI/2&&i<3*Math.PI/2&&(e.x=-1*e.x),i>Math.PI&&i<2*Math.PI&&(e.y=-1*e.y)),e}),this._getAllElementDimensions=(()=>{let t=[],i=this._getContainer().getElementsByClassName(this._config.elementClass);for(let e of i)t.push(this._getElementDimension(e,this._config.spacingX,this._config.spacingY));return t}),this._transformPointToGrid=(t=>(t[0]=Math.floor(t[0]/this._config.grid[0])*this._config.grid[0],t[1]=Math.floor(t[1]/this._config.grid[1])*this._config.grid[1],t)),this._transformCoordinate=((t,i)=>{let e=null;if(t&&i){let n=0,s=0;if(i.x>=0&&i.y>0?(n=t.left+t.a-this._config.gapX+i.x,s=t.top+2*(t.b-this._config.gapY)-Math.abs(i.y)-this._config.newElementHeight):i.x<0&&i.y>0?(n=t.left+t.a-this._config.gapX+i.x-this._config.newElementWidth,s=t.top+2*(t.b-this._config.gapY)-Math.abs(i.y)-this._config.newElementHeight):i.x<0&&i.y<=0?(n=t.left+t.a-this._config.gapX+i.x-this._config.newElementWidth,s=t.top+Math.abs(i.y)):(n=t.left+t.a-this._config.gapX+i.x,s=t.top+Math.abs(i.y)),0===i.x&&(n-=Math.round(this._config.newElementWidth/2)),this._config.grid){let t=this._transformPointToGrid([n,s]);n=t[0],s=t[1]}e={left:n,top:s,width:this._config.newElementWidth,height:this._config.newElementHeight}}return e}),this._percentCovered=((t,i)=>{let e=0;if(t.left<=i.left&&t.top<=i.top&&t.left+t.width>=i.left+i.width&&t.top+t.height>i.top+i.height)e=100;else{t.right=t.left+t.width,t.bottom=t.top+t.height,i.right=i.left+i.width,i.bottom=i.top+i.height;let n=Math.max(t.left,i.left),s=Math.min(t.right,i.right),o=Math.max(t.top,i.top),h=Math.min(t.bottom,i.bottom);h>=o&&s>=n&&(e=(s-n)*(h-o)/(i.width*i.height)*100)}return e}),this._valid=(t=>t&&t.left>=this._config.minX&&t.top>=this._config.minY),this._isOverlapping=((t,i,e,n)=>{let s=!1;if(t){let o=this._cacheKey(t,n);if(this._config.dimensionCache[o])return!0;if(100===this._percentCovered(i,t))for(let i of e){let e=this._percentCovered(t,i);if(e){s=!0,this._config.dimensionCache[o]=e;break}}else s=!0,this._config.dimensionCache[o]=100}else s=!0;return s}),this._existDimension=function(t){return t.left===this.left&&t.top===this.top&&t.width===this.width&&t.height===this.height},this._findDimensions=((t,i,e,n,s)=>{i=i||1,s=s||1;let o=[],h=360,a=h/i;this._config.mirrorSearch&&(h/=h);let g=this._getElementDimension(this._getContainer());if(1===s){let i=this._getElementDimension(this._config.center);!this._valid(i)||o.some(this._existDimension,i)||this._isOverlapping(i,g,e,n)||(o.push({left:i.left,top:i.top,width:i.width,height:i.height}),this._config.dimensionCache[this._cacheKey(i,n)]=0,t--)}this._config.gapX=this._config.defaultGapX+20*(s-1),this._config.gapY=this._config.defaultGapY+20*(s-1);let l=this._getElementDimension(this._config.center);for(;t>0&&0<h;){let i=this._getEllipseCoordinates(l,h),s=[i];this._config.mirrorSearch&&i&&s.push({x:i.x,y:-1*i.y});for(let i of s){let s=this._transformCoordinate(l,i);!this._valid(s)||o.some(this._existDimension,s)||this._isOverlapping(s,g,e,n)||(o.push({left:s.left,top:s.top,width:s.width,height:s.height}),this._config.dimensionCache[this._cacheKey(s,n)]=0,t--)}h-=a}return t>0&&s<this._config.loops&&(s++,i*=2,o=o.concat(this._findDimensions(t,i,e,n,s))),o}),this._getContainer=(()=>this._config.container?this._config.container:document.body),this._showDebugElements=(()=>{if(this._config.debug){let t=document.createDocumentFragment();for(let[i,e]of Object.entries(this._config.dimensionCache)){if(this._config.debugOk&&e)continue;let n=document.createElement("div"),s=i.split("_");n.style.left=s[1]+"px",n.style.top=s[2]+"px",n.style.width=s[3]+"px",n.style.height=s[4]+"px",n.style.backgroundColor=Boolean(e)?"rgba(255,0,0,0.1)":"rgba(0,255,0,0.4)",n.style.opacity=Boolean(e)?.5:1,n.style.zIndex=Boolean(e)?1e3:2e3,n.style.border=Boolean(e)?"none":"1px solid rgba(0,255,0,0.3)",n.innerHTML=Math.round(100*e)/100+"",n.classList.add(this._config.debugElementClass),n.setAttribute("data-depth",s[5]),t.appendChild(n)}this._getContainer().appendChild(t)}}),this._hideDebugElements=(()=>{let t=this._getContainer().getElementsByClassName(this._config.debugElementClass);for(;t.length>0;)t[0].parentNode.removeChild(t[0])}),this.findNonOverlappingDimensions=((t,i=!1)=>{this._hideDebugElements(),this._config.dimensionCache={};let e=this._getAllElementDimensions(),n=[],s=1,o=i?t:1;for(t=i?1:t;s<=o;){let o=this._findDimensions(t,this._config.defaultSteps,e,s);if(!o.length)break;n=n.concat(o),i&&(this._config.defaultGapX=10,this._config.defaultGapY=10,this._config.gapX=50,this._config.gapY=50,this._config.center=o[0],e=e.concat([this._getElementDimension(o[0],this._config.spacingX,this._config.spacingY)])),s++}return this._showDebugElements(),n})}},getEventCoordinates:t=>{let i=0,e=0;return t.offsetX&&t.offsetY?(i=t.offsetX,e=t.offsetY):t.originalEvent&&(i=t.originalEvent.layerX,e=t.originalEvent.layerY),{x:i,y:e}}}});
//# sourceMappingURL=layout.js.map
